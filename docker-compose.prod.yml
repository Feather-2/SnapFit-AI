version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      # 其他环境变量将从.env文件加载
    networks:
      - app_network
    # 健康检查
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # 在生产环境中，我们不直接暴露应用端口，而是通过nginx代理

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"  # 如果配置了HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl  # 如果配置了HTTPS
      - nginx_logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  nginx_logs: 